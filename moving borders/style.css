@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

*
{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family:"Poppins", sans-serif;
}

html,body
{
    height: 100%;
    width: 100%;
}

body
{
    background-color: #0B0C15;
    display: flex;
    justify-content: center;
    align-items: center;
}

.card
{
    height: 40%;
    width: 40%;
    background-color: #1C1F2C;
    color: white;
    padding: 30px;
    line-height: 2.3rem;
    font-size: 1.3rem;
    position: relative;
    border-radius: 10px;

}

h1{
    text-align: center;
    margin-bottom: 30px;
    /* background-image: linear-gradient(); */
}

/* to create a property in css*/
@property --angle  
{
    syntax: "<angle>"; /* what will it accept*/
     inherits: false; /*default false */
     initial-value: 0deg;
}


.card::after,.card::before
{
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 10px;
    z-index: -1;
    padding: 4px;
    background-image: conic-gradient(from var(--angle),green,blue,green,blue); /* thus animation is not applicable over variables so we have to create angle as a property*/
    animation: 3s spin linear infinite;
}

.card::before
{
    filter: blur(1.5rem);
    opacity: 0.5rem;
}

@keyframes spin 
{
    from
    {
        --angle: 0deg;
    }

    to 
    {
        --angle:360deg;
    }
}